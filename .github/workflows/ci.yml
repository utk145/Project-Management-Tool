name: CI Build Checks

# Trigger the workflow on pull request events
on:
  pull_request:
    branches:
      - main  # Replace with your default branch (e.g., main, master, etc.)

# Jobs to run
jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # Use the Node.js version specified in your project
          cache: "npm"      # Cache npm dependencies for faster builds

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run linting
      - name: Run ESLint
        run: npm run lint

      # Run formatting check
      - name: Run Prettier format check
        run: npm run format:check

      # Build the project
      - name: Build the project
        run: npm run build

  code-smell-quality:
    runs-on: ubuntu-latest
    needs: build # Run this job only if the build job succeeds

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run additional code quality checks
      - name: Run code quality checks
        id: eslint
        run: |
          # Run ESLint and capture the output
          ESLINT_OUTPUT=$(npm run code-smell:quality 2>&1)
          echo "eslint_output<<EOF" >> $GITHUB_OUTPUT
          echo "$ESLINT_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Display Code Smell Warnings
        if: always() # Always run this step, even if ESLint fails
        run: |
          # Extract warnings from the ESLint output
          WARNINGS=$(echo "${{ steps.eslint.outputs.eslint_output }}" | grep -i "warning" || true)
          if [ -n "$WARNINGS" ]; then
            echo "### Code Smell Warnings" >> $GITHUB_STEP_SUMMARY
            echo "$WARNINGS" >> $GITHUB_STEP_SUMMARY
          else
            echo "No code smell warnings found." >> $GITHUB_STEP_SUMMARY
          fi